{"ast":null,"code":"const BASEURL = \"https://strangers-things.herokuapp.com/api/2207-FTB-ET-WEB-PT\";\nexport const fetchPosts = async () => {\n  try {\n    const response = await fetch(`\"https://strangers-things.herokuapp.com/api/2207-FTB-ET-WEB-PT/posts\"`);\n    console.log(\"fetchPosts is working!\");\n    const {\n      data\n    } = await response.json();\n    console.log(\"THIS IS DATA\", data.posts);\n    return data.posts;\n  } catch (error) {\n    //console.error(\"There was an error fetching posts\", error)\n  }\n};\n\n// export const registerUser = async (username, password) => {\n//     try {\n//       const response = await fetch(`'${BASEURL}/users/register'`, {\n//           method: \"POST\",\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify({\n//             user: {\n//               username: username,\n//               password: password\n//               //username, \n//               //password //alt code\n//             }\n//           })\n//         })\n//         return  response.json()\n//   } catch(error) {\n//       console.error(\"There's an error with the registerUser\", error)\n//   }\n//   }\n\nexport const registerUser = async (username, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          username,\n          password\n        }\n      })\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('error registering user', error);\n  }\n};\nregisterUser();","map":{"version":3,"names":["BASEURL","fetchPosts","response","fetch","console","log","data","json","posts","error","registerUser","username","password","BASE_URL","method","headers","body","JSON","stringify","user"],"sources":["/Users/raeeyassu/Desktop/Bootcamp/Stranger-Things/src/api/api.js"],"sourcesContent":["const BASEURL = \"https://strangers-things.herokuapp.com/api/2207-FTB-ET-WEB-PT\";\n\nexport const fetchPosts = async () => {\n  try{\n    const response = await fetch(`\"https://strangers-things.herokuapp.com/api/2207-FTB-ET-WEB-PT/posts\"`);\n    console.log(\"fetchPosts is working!\");\n    const { data } = await response.json(); \n    console.log(\"THIS IS DATA\", data.posts);\n    return data.posts;\n  } catch(error){\n    //console.error(\"There was an error fetching posts\", error)\n  }\n};\n\n\n// export const registerUser = async (username, password) => {\n//     try {\n//       const response = await fetch(`'${BASEURL}/users/register'`, {\n//           method: \"POST\",\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify({\n//             user: {\n//               username: username,\n//               password: password\n//               //username, \n//               //password //alt code\n//             }\n//           })\n//         })\n//         return  response.json()\n//   } catch(error) {\n//       console.error(\"There's an error with the registerUser\", error)\n//   }\n//   }\n\n\nexport const registerUser = async (username, password) => {\n  try{\n      const response = await fetch(`${BASE_URL}/users/register`, {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user: {\n              username,\n              password,\n            }\n          })\n      });\n      const data = await response.json()\n      return data\n  } catch(error){\n      console.error('error registering user', error)\n  }\n};\n\n\n\n  registerUser();"],"mappings":"AAAA,MAAMA,OAAO,GAAG,+DAA+D;AAE/E,OAAO,MAAMC,UAAU,GAAG,YAAY;EACpC,IAAG;IACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,uEAAsE,CAAC;IACrGC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrC,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IACtCH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEC,IAAI,CAACE,KAAK,CAAC;IACvC,OAAOF,IAAI,CAACE,KAAK;EACnB,CAAC,CAAC,OAAMC,KAAK,EAAC;IACZ;EAAA;AAEJ,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,YAAY,GAAG,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACxD,IAAG;IACC,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEU,QAAS,iBAAgB,EAAE;MACvDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAE;UACJR,QAAQ;UACRC;QACF;MACF,CAAC;IACL,CAAC,CAAC;IACF,MAAMN,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAMG,KAAK,EAAC;IACVL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;EAClD;AACF,CAAC;AAICC,YAAY,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}